using System;
using System.Collections.Generic;
using System.IO;
using OfficeOpenXml;

class Program
{
    static void Main()
    {
        // Create column headers
        List<string> column1 = new List<string> { "Corp Actions", "SpinOffs", "Mandatory Corporate" };
        string column2 = "WithIn Standards";
        string column3 = "TotalActions";

        // Sample data for array1 and array2
        List<string> array1 = new List<string> { "Value1", "Value2", "Value3" };
        List<string> array2 = new List<string> { "Value4", "Value5", "Value6" };

        // Create an Excel package
        using (var package = new ExcelPackage())
        {
            var worksheet = package.Workbook.Worksheets.Add("Data");

            // Write column headers to the worksheet
            for (int i = 1; i <= column1.Count; i++)
            {
                worksheet.Cells[1, i].Value = column1[i - 1];
            }

            worksheet.Cells[1, column1.Count + 1].Value = column2;
            worksheet.Cells[1, column1.Count + 2].Value = column3;

            // Write data row by row
            for (int i = 0; i < array1.Count; i++)
            {
                int row = i + 2; // Start from the second row
                for (int j = 1; j <= column1.Count; j++)
                {
                    worksheet.Cells[row, j].Value = array1[i];
                }

                // Check for empty cell in column2 and print values of array1 row-wise
                if (string.IsNullOrEmpty(column2))
                {
                    worksheet.Cells[row, column1.Count + 1].Value = array1[i];
                }

                // Check for empty cell in column3 and print values of array2 row-wise
                if (string.IsNullOrEmpty(column3))
                {
                    worksheet.Cells[row, column1.Count + 2].Value = array2[i];
                }
            }

            // Save the Excel file
            FileInfo excelFile = new FileInfo("SampleData.xlsx");
            package.SaveAs(excelFile);
        }

        Console.WriteLine("Excel file created successfully.");
    }
}
--
 string downloadsFolder = Environment.GetFolderPath(Environment.SpecialFolder.UserProfile) + "\\Downloads";
            string excelFilePath = Path.Combine(downloadsFolder, "SampleData.xlsx");

            FileInfo excelFile = new FileInfo(excelFilePath);
            package.SaveAs(excelFile);
--
using System;
using System.IO;
using OfficeOpenXml;

class Program
{
    static void Main()
    {
        // Create Excel package
        using (var package = new ExcelPackage())
        {
            var worksheet = package.Workbook.Worksheets.Add("Data");

            // Create row headers
            worksheet.Cells["A1"].Value = "Corp Actions";
            worksheet.Cells["A2"].Value = "SpinOffs";
            worksheet.Cells["A3"].Value = "Mandatory Corporate";

            // Create column headers
            worksheet.Cells["B1"].Value = "WithIn Standards";
            worksheet.Cells["C1"].Value = "TotalActions";

            // Sample data for array1 and array2
            string[] array1 = { "Value1", "Value2", "Value3" };
            string[] array2 = { "Value4", "Value5", "Value6" };

            // Write data row by row
            for (int i = 0; i < array1.Length; i++)
            {
                int row = i + 2; // Start from the second row
                worksheet.Cells[row, 2].Value = array1[i]; // Check for empty cell in column2
                if (string.IsNullOrEmpty(array1[i]))
                {
                    worksheet.Cells[row, 2].Value = "No Value"; // Set a default value if it's empty
                }

                worksheet.Cells[row, 3].Value = array2[i]; // Check for empty cell in column3
                if (string.IsNullOrEmpty(array2[i]))
                {
                    worksheet.Cells[row, 3].Value = "No Value"; // Set a default value if it's empty
                }
            }

            // Save the Excel file
            FileInfo excelFile = new FileInfo("SampleData.xlsx");
            package.SaveAs(excelFile);
        }

        Console.WriteLine("Excel file created successfully.");
    }
}
----------
using System;

class Program
{
    static void Main()
    {

        int[,,,] fourDArray = {
            {
                { { 1, 2 }, { 3, 4 } },
                { { 5, 6 }, { 7, 8 } }
            },
            {
                { { 9, 10 }, { 11, 12 } },
                { { 13, 14 }, { 15, 16 } }
            }
        };

        Print4DArray(fourDArray);
    }

    static void Print4DArray(int[,,,] array)
    {
        // Get the dimensions of the array
        int dim1 = array.GetLength(0);
        int dim2 = array.GetLength(1);
        int dim3 = array.GetLength(2);
        int dim4 = array.GetLength(3);

        for (int i = 0; i < dim1; i++)
        {
            for (int j = 0; j < dim2; j++)
            {
                for (int k = 0; k < dim3; k++)
                {
                    for (int l = 0; l < dim4; l++)
                    {
                        Console.WriteLine($"[{i},{j},{k},{l}] = {array[i, j, k, l]}");
                    }
                }
            }
        }
    }
}
